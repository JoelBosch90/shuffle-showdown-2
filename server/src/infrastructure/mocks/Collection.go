// Code generated by MockGen. DO NOT EDIT.
// Source: lambda/Collection.go
//
// Generated by this command:
//
//	mockgen -source=lambda/Collection.go -destination=mocks/Collection.go -package=mocks Collection
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	awscdk "github.com/aws/aws-cdk-go/awscdk/v2"
	gomock "go.uber.org/mock/gomock"
)

// MockICollection is a mock of ICollection interface.
type MockICollection struct {
	ctrl     *gomock.Controller
	recorder *MockICollectionMockRecorder
	isgomock struct{}
}

// MockICollectionMockRecorder is the mock recorder for MockICollection.
type MockICollectionMockRecorder struct {
	mock *MockICollection
}

// NewMockICollection creates a new mock instance.
func NewMockICollection(ctrl *gomock.Controller) *MockICollection {
	mock := &MockICollection{ctrl: ctrl}
	mock.recorder = &MockICollectionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICollection) EXPECT() *MockICollectionMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockICollection) Create(stack awscdk.Stack) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Create", stack)
}

// Create indicates an expected call of Create.
func (mr *MockICollectionMockRecorder) Create(stack any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockICollection)(nil).Create), stack)
}
